/// <reference types="node" />
import AuthSession from './AuthSession';
import { AuthSessionType } from '../../resources/enums';
import type Client from '../Client';
import type { EOSAuthData } from '../../resources/structs';
declare class EOSAuthSession extends AuthSession<AuthSessionType.EOS> {
    refreshToken: string;
    refreshTokenExpiresAt: Date;
    applicationId: string;
    mergedAccounts: string[];
    scope: string;
    refreshTimeout?: NodeJS.Timeout;
    constructor(client: Client, data: EOSAuthData, clientSecret: string);
    checkIsValid(forceVerify?: boolean): Promise<boolean>;
    revoke(): Promise<void>;
    refresh(): Promise<void>;
    initRefreshTimeout(): void;
    static create(client: Client, clientId: string, clientSecret: string, data: Record<string, string>): Promise<EOSAuthSession>;
}
export default EOSAuthSession;
