import Base from '../Base';
import type Client from '../Client';
/**
 * Represents the client's EOS Connect STOMP manager (i.e. chat messages)
 */
declare class EOSConnect extends Base {
    /**
     * private stomp connection
     */
    private stompConnection?;
    /**
     * private stomp connection id (i.e. used for eos presence)
     */
    private stompConnectionId?;
    /**
     * @param client The main client
     */
    constructor(client: Client);
    /**
     * Whether the internal websocket is connected
     */
    get isConnected(): boolean;
    /**
     * Returns the eos stomp connection id
     */
    get connectionId(): string | undefined;
    /**
     * connect to the eos connect stomp server
     * @throws {AuthenticationMissingError} When there is no eos auth to use for stomp auth
     * @throws {StompConnectionError} When the connection failed for any reason
     * @throws {Error} When there was an error with the underlying websocket
     */
    connect(): Promise<unknown>;
    /**
     * Disconnects the stomp websocket client.
     * Also performs a cleanup
     */
    disconnect(): void;
    /**
     * Sets up the subscription for the deployment
     * @param connectionResolve connect promise resolve
     * @param connectionReject connect promise reject
     */
    private setupSubscription;
}
export default EOSConnect;
